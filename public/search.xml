<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub+Hexo(Next)博客搭建及美化</title>
      <link href="/2022/03/09/GitHub-Hexo-Next-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BE%8E%E5%8C%96/"/>
      <url>/2022/03/09/GitHub-Hexo-Next-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?p=1">2021最新保姆级Hexo+GitHub搭建个人博客</a></p><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><h2 id="NEXT主题的安装"><a href="#NEXT主题的安装" class="headerlink" title="NEXT主题的安装"></a>NEXT主题的安装</h2><p>在博客根目录下执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/theme-next/</span>hexo-theme-<span class="keyword">next</span></span><br><span class="line">themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>然后设置博客配置文件__config.yml：（博客根目录下的__config.yml）</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure><h2 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h2><h3 id="内容板块"><a href="#内容板块" class="headerlink" title="内容板块"></a>内容板块</h3><p>博客根目录 themes\next\source\css\schemes\Pisces\layout.styl 文件 .content-wrap 标签下 background: 修改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.3</span>);</span><br></pre></td></tr></table></figure><h3 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h3><p>博客根目录 themes\next\source\css\schemes\Pisces\layout.styl 文件 .header-inner 标签下 background: 修改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>);</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/09/hello-world/"/>
      <url>/2022/03/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Andy老师的题库解</title>
      <link href="/2022/03/01/Andy%E2%80%99s_anwser/"/>
      <url>/2022/03/01/Andy%E2%80%99s_anwser/</url>
      
        <content type="html"><![CDATA[<h1 id="枚举算法"><a href="#枚举算法" class="headerlink" title="枚举算法"></a>枚举算法</h1><h2 id="假币问题"><a href="#假币问题" class="headerlink" title="假币问题"></a>假币问题</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string Left[<span class="number">3</span>];   <span class="comment">//天平左边银币</span></span><br><span class="line">string Right[<span class="number">3</span>];  <span class="comment">//天平右边银币</span></span><br><span class="line">string result[<span class="number">3</span>]; <span class="comment">//称量结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// islight 为真表示假设假币为轻，否则表示假币为重</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isFeitCoin</span><span class="params">(<span class="type">char</span> iCoin, <span class="type">bool</span> isLight)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string c;           <span class="comment">//只用string存储Coin</span></span><br><span class="line">    c.<span class="built_in">push_back</span>(iCoin); <span class="comment">// char转换为string的技巧</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//临时变量保存左右称量结果</span></span><br><span class="line">        string l = Left[i], r = Right[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果isLight为假，则在另一端判断</span></span><br><span class="line">        <span class="keyword">if</span> (!isLight)</span><br><span class="line">            <span class="built_in">swap</span>(l, r);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判定c是否为假币</span></span><br><span class="line">        <span class="keyword">switch</span> (result[i][<span class="number">0</span>]) <span class="comment">//天平右边的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>: <span class="comment">//两端平衡</span></span><br><span class="line">            <span class="keyword">if</span> (l.<span class="built_in">find</span>(c) != string::npos || r.<span class="built_in">find</span>(c) != string::npos)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>: <span class="comment">//右端高</span></span><br><span class="line">            <span class="keyword">if</span> (r.<span class="built_in">find</span>(c) == string::npos)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>: <span class="comment">//右端低</span></span><br><span class="line">            <span class="keyword">if</span> (l.<span class="built_in">find</span>(c) == string::npos)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; Left[i] &gt;&gt; Right[i] &gt;&gt; result[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//枚举所有银币，是否是假币的所有情况</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> iCoin = <span class="string">&#x27;A&#x27;</span>; iCoin &lt;= <span class="string">&#x27;L&#x27;</span>; iCoin++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isFeitCoin</span>(iCoin, <span class="literal">true</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; iCoin &lt;&lt; <span class="string">&quot; is the counterfeit coin and it is light. &quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isFeitCoin</span>(iCoin, <span class="literal">false</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; iCoin &lt;&lt; <span class="string">&quot; is the counterfeit coin and it is heavy. &quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div> <span id="more"></span><h2 id="两数之和（双指针算法）"><a href="#两数之和（双指针算法）" class="headerlink" title="两数之和（双指针算法）"></a>两数之和（双指针算法）</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> target, n;</span><br><span class="line">    cin &gt;&gt; target &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = n - <span class="number">1</span>; i &lt; j;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] + a[j] == target)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt; j;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] + a[j] &gt; target ? j-- : i++; <span class="comment">//满足大于：左移，满足小于；右移</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="三数之和（set算法）"><a href="#三数之和（set算法）" class="headerlink" title="三数之和（set算法）"></a>三数之和（set算法）</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">set&lt;<span class="type">int</span>&gt; Data;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> target, n;</span><br><span class="line">    cin &gt;&gt; target &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp;</span><br><span class="line">        cin &gt;&gt; tmp;</span><br><span class="line">        Data.<span class="built_in">insert</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (set&lt;<span class="type">int</span>&gt;::iterator it = Data.<span class="built_in">begin</span>(); it != Data.<span class="built_in">end</span>(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (set&lt;<span class="type">int</span>&gt;::iterator it2 = it; ++it2 != Data.<span class="built_in">end</span>();)</span><br><span class="line">        <span class="comment">//通过双重循环前两指针</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = target - *it - *it2; <span class="comment">//通过第一二个元素算出第三个元素的大小</span></span><br><span class="line">            <span class="comment">//如果第三个元素小于第二个元素，违背题目要求</span></span><br><span class="line">            <span class="comment">//且由于有序性，后面的元素增大，第三个元素会始终小于第二个元素可以跳出该层循环</span></span><br><span class="line">            <span class="keyword">if</span> (tmp &lt;= *it2)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            set&lt;<span class="type">int</span>&gt;::iterator it3 = Data.<span class="built_in">find</span>(tmp);</span><br><span class="line">            <span class="comment">//使用find方法寻找是否存在满足值</span></span><br><span class="line">            <span class="keyword">if</span> (it3 != Data.<span class="built_in">end</span>()) <span class="comment">// set中如果没有查找到将返回end迭代器，如果查找到，证明有，则输出</span></span><br><span class="line">                cout &lt;&lt; *it &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; *it2 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; *it3 &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="二进制密码锁（位运算）"><a href="#二进制密码锁（位运算）" class="headerlink" title="二进制密码锁（位运算）"></a>二进制密码锁（位运算）</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string line;            <span class="comment">//输入的01字符串</span></span><br><span class="line">    bitset&lt;32&gt; lock;        <span class="comment">//当前的锁的状态</span></span><br><span class="line">    <span class="type">int</span> minTimes = <span class="number">1</span> &lt;&lt; <span class="number">30</span>; <span class="comment">//初始化按钮次数为无穷大</span></span><br><span class="line">    <span class="comment">//读入字符串，初始化用bitset表示的锁的初始状态与目标状态变量</span></span><br><span class="line">    cin &gt;&gt; line;</span><br><span class="line">    <span class="function">bitset&lt;32&gt; <span class="title">sourceLock</span><span class="params">(line)</span></span>;</span><br><span class="line">    cin &gt;&gt; line;</span><br><span class="line">    <span class="function">bitset&lt;32&gt; <span class="title">targetLock</span><span class="params">(line)</span></span>;</span><br><span class="line">    <span class="comment">//枚举第一个按钮是否按下的两种情况即可。对于指定的一种情况，后面的事情都是确定的</span></span><br><span class="line">    <span class="type">int</span> n = line.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = <span class="number">0</span>; p &lt; <span class="number">2</span>; ++p) <span class="comment">// p=0代表最左边的按钮不按，p=1代表按下</span></span><br><span class="line">    &#123;</span><br><span class="line">        lock = sourceLock;          <span class="comment">//初始化lock</span></span><br><span class="line">        <span class="type">int</span> times = <span class="number">0</span>;              <span class="comment">//按下的次数</span></span><br><span class="line">        <span class="type">int</span> nextButton = p;         <span class="comment">//初始化下一个按钮的状态，是否按下</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="comment">//遍历所有的位置</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nextButton == <span class="number">1</span>) <span class="comment">//按钮按下的状态更新</span></span><br><span class="line">            &#123;</span><br><span class="line">                ++times;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">0</span>)</span><br><span class="line">                    lock.<span class="built_in">flip</span>(i - <span class="number">1</span>); <span class="comment">//左边取反</span></span><br><span class="line">                lock.<span class="built_in">flip</span>(i);         <span class="comment">//中间取反</span></span><br><span class="line">                <span class="keyword">if</span> (i &lt; n - <span class="number">1</span>)</span><br><span class="line">                    lock.<span class="built_in">flip</span>(i + <span class="number">1</span>); <span class="comment">//右边取反</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断当前lock是否与目标targetlock的第i位相同</span></span><br><span class="line">            <span class="keyword">if</span> (lock[i] != targetLock[i])</span><br><span class="line">                nextButton = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//如果不同就要在下一次循环按下按钮</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                nextButton = <span class="number">0</span>; <span class="comment">//不要按下当前按钮</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (lock == targetLock)              <span class="comment">//是否抵达目标状态</span></span><br><span class="line">            minTimes = <span class="built_in">min</span>(minTimes, times); <span class="comment">//取最小值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (minTimes == <span class="number">1</span> &lt;&lt; <span class="number">30</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;impossible&quot;</span> &lt;&lt; endl; <span class="comment">//没有找到目标状态</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; minTimes &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h1 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h1><h2 id="汉诺塔"><a href="#汉诺塔" class="headerlink" title="汉诺塔"></a>汉诺塔</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//把id号盘子从start移动到target中</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">move</span><span class="params">(<span class="type">int</span> id, <span class="type">char</span> start, <span class="type">char</span> target)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; id &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; start &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; target &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将start上的n个盘子，以other为中转，移动到target</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> start, <span class="type">char</span> other, <span class="type">char</span> target)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123; <span class="comment">//只需移动一个盘子</span></span><br><span class="line">        <span class="built_in">move</span>(n, start, target);</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">//递归终止</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Hanoi</span>(n - <span class="number">1</span>, start, target, other); <span class="comment">//先用target作为中转，把n-1个从start中移动到other中，start中只剩下第n个</span></span><br><span class="line">    <span class="built_in">move</span>(n, start, target);             <span class="comment">//把start中剩下的第n个移动到target中</span></span><br><span class="line">    <span class="built_in">Hanoi</span>(n - <span class="number">1</span>, other, start, target); <span class="comment">//在用start作为中转，把n-1个从other中移动到target中</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> A, B, C;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; A &gt;&gt; B &gt;&gt; C; <span class="comment">//输入盘子数</span></span><br><span class="line">    <span class="built_in">Hanoi</span>(n, A, B, C);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="排列数字"><a href="#排列数字" class="headerlink" title="排列数字"></a>排列数字</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>            </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>; <span class="comment">//最大值</span></span><br><span class="line"><span class="type">int</span> n;            <span class="comment">//读入的n</span></span><br><span class="line"><span class="type">int</span> path[N];      <span class="comment">//记录路径每个位的值</span></span><br><span class="line"><span class="type">bool</span> used[N];     <span class="comment">//记录第i个数是否被用过</span></span><br><span class="line">&#123;% endspoiler %&#125;<span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(i</span></span></span><br><span class="line"><span class="params"><span class="function">nt u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#123;% spoiler %&#125;<span class="keyword">if</span> (u == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//输出排列，u==n表示已经没有可以再用的数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            cout &lt;&lt; path[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//枚举数字1——n</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!used[i])</span><br><span class="line">        &#123;</span><br><span class="line">            path[u] = i;     <span class="comment">//记录当前位path[u]的数字为i</span></span><br><span class="line">            used[i] = <span class="literal">true</span>;  <span class="comment">//标记数字i为已经使用过</span></span><br><span class="line">            <span class="built_in">dfs</span>(u + <span class="number">1</span>);      <span class="comment">//递归处理下一位</span></span><br><span class="line">            used[i] = <span class="literal">false</span>; <span class="comment">//恢复现场</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello!</title>
      <link href="/2021/12/02/hello_world/"/>
      <url>/2021/12/02/hello_world/</url>
      
        <content type="html"><![CDATA[<h1><center>欢迎来到派大标的菠萝屋</center></h1><h2><center>Welcome To Patrick Star's Pineapple house</center></h2><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
